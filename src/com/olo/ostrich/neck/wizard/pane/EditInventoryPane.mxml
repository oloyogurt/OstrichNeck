<?xml version="1.0" encoding="utf-8"?>
<DefaultWizardCanvasPane paneTitle="Yogurt Inventory Details" paneName="{PANE_NAME}" 
	xmlns="com.olo.ostrich.neck.wizard.pane.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="599" height="396">
	
	<mx:Script>
		<![CDATA[
			import com.olo.ostrich.neck.dto.Yogurt;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import com.olo.ostrich.neck.event.InventoryEvent;
			import com.olo.ostrich.neck.dto.InventoryItem;
			import mx.collections.ArrayCollection;
			
			static public const PANE_NAME:String = "editYogurtInventoryPane";
			
			[Bindable] private var _inventory:InventoryItem = null;
			[Bindable] private var _yogurt:ArrayCollection = null;
			
			
			public function set yogurt(list:ArrayCollection):void
			{
				_yogurt = list;
				
				if (_yogurt.sort == null)
				{
					var sf:SortField = new SortField();
					sf.name = "yocreamName";
					var sort:Sort = new Sort();
					sort.fields = [sf];
					_yogurt.sort = sort;
					_yogurt.refresh();
				}
			}
			
			
			override public function set dataProvider(dp:Object):void
			{
				if (dp != null)
				{
					if (!(dp is InventoryItem)) throw new Error("EditYogurtInventoryPane:set dataProvider - Only accepts an array of InventoryItem types");

					_inventory = InventoryItem(dp);
					
					shelfLifeDenomCB.selectedIndex = _inventory.shelfLifeDenomination;
					
					onChange();
				}
			}
			
			
			override public function get dataProvider():Object
			{
				return _inventory;
			}
			
			
			private function onChange():void
			{
				super.isValid = ((_inventory.name != null) && (_inventory.name.length > 0)) ? true : false;
				
				_inventory.shelfLifeDenomination = shelfLifeDenomCB.selectedIndex;
				
				if (typeCB.selectedLabel == InventoryItem.INVENTORY_CATEGORY_YOGURT_STR)
				{
					knownItemsPanel.enabled = true;
				}
				else
				{
					_inventory.itemDetail = null;
					knownItemsPanel.enabled = false;
				}
			}
			
			
			private function onSearch():void
			{
				var pattern:RegExp = new RegExp(searchTI.text, "i");
				for (var i:int=0; i < _yogurt.length; ++i)
				{
					var item:Yogurt = Yogurt(_yogurt.getItemAt(i));
					if (item.yocreamName.match(pattern))
					{
						itemList.selectedIndex = i;
						itemList.scrollToIndex(i);
						break;
					}
				}
			}
			
			
			private function onAssociate():void
			{
				if (itemList.selectedItem != null)
				{
					var selectedYogurt:Yogurt = Yogurt(itemList.selectedItem);
					_inventory.name = selectedYogurt.yocreamName;
					_inventory.itemDetail = selectedYogurt;
					
					onChange();
				}
			}
			
			
			private function onAssociatedCBClick():void
			{
				_inventory.itemDetail = null;
				associatedCB.executeBindings();
			}
			
			
			private function onNameChange():void
			{
				_inventory.itemDetail = null;
				onChange();
			}
			
		]]>
	</mx:Script>
	
	<mx:Binding destination="_inventory.name" source="nameTI.text"/>
	<mx:Binding destination="_inventory.manufactureName" source="manufacturerTI.text"/>
	<mx:Binding destination="_inventory.cost" source="Number(costTI.text)"/>
	<mx:Binding destination="_inventory.itemsInCase" source="int(caseCountTI.text)"/>
	<mx:Binding destination="_inventory.shelfLife" source="int(shelfLifeTI.text)"/>
	<mx:Binding destination="_inventory.shelfLifeDenomination" source="shelfLifeDenomCB.selectedItem.data"/>
	<mx:Binding destination="_inventory.notes" source="notesTA.text"/>
	<mx:Binding destination="_inventory.active" source="activeCB.selected"/>
	<mx:Binding destination="_inventory.itemNumber" source="itemNumberTI.text"/>
	<mx:Binding destination="_inventory.category" source="typeCB.selectedIndex"/>
	<mx:Binding destination="_inventory.taxable" source="taxableCB.selected"/>
	
	<mx:CurrencyValidator source="{costTI}" precision="2" property="text" trigger="{costTI}" triggerEvent="change" invalid="Alert.show('Please enter a valid dollar amount');"/>
	
	<mx:Label text="Name:" fontWeight="bold" textAlign="right" width="89" top="23" left="20"/>
	<mx:Label text="Manufacturer:" fontWeight="bold" textAlign="right" width="89" top="75" left="14"/>
	<mx:Label text="Cost Per Case:" fontWeight="bold" textAlign="right" width="89" top="103" left="20"/>
	<mx:Label text="Shelf Life:" fontWeight="bold" textAlign="right" width="89" top="187" left="19"/>
	<mx:Label text="Notes:" fontWeight="bold" textAlign="left" width="55" top="245" left="31"/>
	<mx:TextInput text="{_inventory.name}" change="onNameChange()" id="nameTI" top="21" left="118" width="161"/>
	<mx:Label text="Type:" fontWeight="bold" textAlign="right" left="73" top="49"/>
	<mx:ComboBox x="117" y="47" id="typeCB" change="onChange()" selectedIndex="{_inventory.category}" dataProvider="{InventoryItem.INVENTORY_TYPES}" width="162"></mx:ComboBox>
	<mx:TextInput text="{_inventory.manufactureName}" change="onChange()" id="manufacturerTI" top="75" left="117" width="161"/>
	<mx:TextInput text="{_inventory.cost}" change="onChange()" id="costTI" top="101" left="118" width="161"/>
	<mx:Label text="Items Per Case:" fontWeight="bold" textAlign="right" width="99" top="129" left="10"/>
	<mx:TextInput text="{_inventory.itemsInCase}" change="onChange()" id="caseCountTI" top="127" left="117" width="162"/>
	<mx:TextInput id="itemNumberTI" left="117" top="155" text="{_inventory.itemNumber}" width="162"/>
	<mx:TextInput text="{_inventory.shelfLife}" change="onChange()" width="69" id="shelfLifeTI" top="185" left="117"/>
	<mx:ComboBox width="84" change="onChange()" dataProvider="{InventoryItem.SHELF_LIFE_DENOMINATIONS}" id="shelfLifeDenomCB" top="185" left="194"></mx:ComboBox>
	<mx:CheckBox id="taxableCB" selected="{_inventory.taxable}" label="Taxable" fontWeight="bold" left="117" top="215"/>
	<mx:CheckBox id="activeCB" label="Active" top="215" selected="{_inventory.active}" width="63" left="215" fontWeight="bold"/>
	<mx:CheckBox id="associatedCB" click="onAssociatedCBClick()" selected="{Boolean(_inventory.itemDetail)}" label="Associated" fontWeight="bold" left="117" top="243"/>
	<mx:TextArea text="{_inventory.notes}" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" change="onChange()" left="20" top="271" bottom="10" id="notesTA" cornerRadius="17" right="321"/>
	<mx:Label text="Item Number:" fontWeight="bold" textAlign="right" width="89" top="157" left="19"/>
	<mx:VRule x="301" width="2" top="10" bottom="10"/>
	
	<mx:Panel width="250" id="knownItemsPanel" layout="absolute" title="Known Items" left="325" top="15" bottom="16" borderColor="#6FB33D">
		<mx:List id="itemList" doubleClickEnabled="true" doubleClick="onAssociate()" dataProvider="{_yogurt}" labelField="yocreamName" left="5" top="5" bottom="31" right="5"/>
		<mx:Label text="Search:" left="5" bottom="5"/>
		<mx:TextInput id="searchTI" change="onSearch()" enter="onAssociate()" bottom="5" left="60" right="5"/>
		<mx:ControlBar>
			<mx:Button label="Associate" click="onAssociate()" enabled="{itemList.selectedItem}"/>
		</mx:ControlBar>
	</mx:Panel>
	
</DefaultWizardCanvasPane>
